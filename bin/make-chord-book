#!/usr/bin/env coffee

fs = require 'fs'
program = require 'commander'

Fingerings = require '../index'
{Chords} = Fingerings.theory
Layout = Fingerings.utils.layout

books = require '../lib/books'
books.chord_shape_flipbook = require '../lib/chord-shape-animation'

program
  .version('0.0.1')

mkdir_p = (dirname) ->
  try
    fs.mkdirSync dirname
  catch err
    throw err unless err.code == 'EEXIST'

with_book_options = (options, fn) ->
  dirname = './build/'
  mkdir_p dirname
  Layout.directory dirname
  fn()

subcommands = []

subcommand = (name) ->
  subcommands.push name
  program.command name

book_command = (action, name) ->
  action_options = null
  command = subcommand(name)
  command.option('--pages <count>', 'Limit to this many pages', parseInt)
  command.action_options = (filter) -> action_options = filter
  command.action (options) ->
    options = action_options options if action_options
    with_book_options (options), ->
      action options
  command

book_command(books.chord_book, 'chordbook')
  .description('Create a chord bible')
  .option('-a, --combined', 'Combine all fingerings onto each chord chart')
  .action_options (options) -> {best_fingering: not options.combined}

book_command(books.harmonic_table_chords, 'harmonic-table-chords')
book_command(books.harmonic_table_scales, 'harmonic-table-scales')

book_command(books.chord_fingerings_page, 'fingerings')
  .description('Fingerings for a specific chord')
  .action_options (options) -> {chord: Chords[6].at('F')}

book_command(books.chord_shape_fragments, 'fragments')
  .description('Chord shape fragments')
  .option('--no-chord-pages', 'Skip the chord pages')
  .action_options (options) -> {chord_pages: options.chordPages}

book_command(books.intervals_book, 'intervals')
  .description('IntervalNames on the fretboard')
  .action_options -> {by_root: true}

book_command(books.chord_shape_flipbook, 'animation')
  .description('Flipbook showing the animations of a chord')
  .option('--quick', 'Quick test -- bigger animation skips; fewer pages')
  .option('--speed <f>', 'Slower by a factor of <f>', parseFloat)

program
  .command('all')
  .action (options) ->
    with_book_options (options), ->
      # books.intervals_book by_root: true
      # books.intervals_book by_root: false
      books.chord_book best_fingering: true
      books.chord_book best_fingering: false
      books.harmonic_table_chords()
      books.harmonic_table_scales()
      books.chord_shape_flipbook quick: true
      books.chord_fingerings_page chord: Chords[6].at('F')

program
  .command('*')
  .action ->
    console.log 'Commands:'
    console.log "  #{name}" for name in subcommands

program.parse(process.argv)
